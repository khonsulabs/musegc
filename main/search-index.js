var searchIndex = new Map(JSON.parse('[\
["benchmarks",{"t":"","n":[],"q":[],"i":[],"f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["refuse",{"t":"FFKFKFTKYKFFKRKYFFFFNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AnyRef","AnyRoot","Collectable","CollectionGuard","ContainsNoRefs","LocalPool","MAY_CONTAIN_REFERENCES","MapAs","MapAs","NoMapping","Ref","Root","SimpleType","Target","Trace","Trace","Tracer","WouldDeadlock","YieldComplete","Yielder","acquire","allocating_in","architecture","as_any","as_any","as_mut","as_ref","as_ref","as_ref","as_root","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","collect","collect","compare","compare","compare","compare","coordinated_yield","default","deref","downcast_checked","downcast_ref","downcast_root","downgrade","downgrade_any","drop","drop","drop","drop","enter","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into_any_root","load","load","load","load_mapped","map_as","mark","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ptr_eq","root_count","to_any_root","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trace","trace","trace","trace","try_acquire","try_collect","try_collect","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_any","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_while_unlocked","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","while_unlocked","yield_to_collector"],"q":[[0,"refuse"],[224,"core::option"],[225,"intentional::cast"],[226,"core::cmp"],[227,"core::ops::function"],[228,"core::fmt"],[229,"core::hash"],[230,"core::marker"],[231,"core::convert"],[232,"alloc::string"],[233,"core::result"],[234,"core::any"],[235,"refuse_macros"]],"i":[0,0,0,0,0,0,34,0,0,0,0,0,0,27,0,0,0,0,0,0,1,1,0,3,6,1,1,7,3,3,2,1,14,16,28,7,3,10,6,4,2,1,14,16,28,7,3,10,6,4,2,1,14,16,28,7,3,10,6,4,2,1,14,16,28,7,3,10,6,4,7,3,10,6,4,7,3,10,6,4,7,3,6,4,0,1,7,3,6,4,1,2,7,4,4,4,7,7,2,1,7,6,2,7,7,7,7,7,3,3,3,3,3,10,6,4,7,3,10,10,4,2,1,14,16,28,7,3,10,6,6,4,4,4,4,4,2,1,14,16,28,7,3,10,6,4,7,3,6,4,2,1,14,16,28,7,3,10,6,4,7,3,6,4,4,27,28,7,3,7,3,6,4,7,7,7,7,3,10,6,4,10,34,7,3,4,1,0,1,2,1,14,16,28,7,3,10,6,4,7,2,1,14,16,28,7,3,10,6,4,1,2,1,14,16,28,7,3,10,6,4,14,1,1],"f":"````````````````````{{}b}{{bd}b}`{{{f{c}}}hj}{lh}{bb}0{{{n{c}}}{{f{c}}}j}{{{f{c}}}{{f{c}}}{}}{{{f{c}}b}{{A`{{n{c}}}}}j}{ce{}{}}0000000000000000000{cg{}{}{{Ab{e}}}}0000000001111111111{{{n{c}}}{{n{c}}}j}4{AdAd}{ll}{hh}{{ce}Af{}{}}0000{{{n{c}}{n{c}}}Ah{jAj}}{{{f{c}}{f{c}}}Ah{}}{{ll}Ah}{{hh}Ah}{{}Af}{bAf}{{ce}Ah{}{}}000{{bc}Af{{Bb{Al}{{An{B`}}}}}}{{}d}{{{n{c}}}ej{}}{h{{A`{{f{c}}}}}j}{h{{f{c}}}j}{{hb}{{A`{{n{c}}}}}j}{{{n{c}}}{{f{c}}}j}{{{n{c}}}hj}{dAf}:{{{n{c}}}Afj}{lAf}{db}{{{n{c}}h}Bdj}{{{n{c}}{f{c}}}Bdj}0{{{n{c}}{n{c}}}Bd{jBf}}2{{{f{c}}{f{c}}}Bd{}}{{{f{c}}{n{c}}}Bdj}{{{f{c}}h}Bdj}01{{AdAd}Bd}{{ll}Bd}{{hh}Bd}{{{n{c}}Bh}Bj{jBl}}{{{f{c}}Bh}Bj{jBl}}{{AdBh}Bj}0{{hBh}Bj}{cc{}}0000000{{{n{c}}}lj}1{hh}{{{f{c}}}hj}03{{{n{c}}}hj}4444444444{{{n{c}}e}Af{jBn}C`}{{{f{c}}e}Af{}C`}{{lc}AfC`}{{hc}AfC`}{ce{}{}}0000000008{{{f{c}}b}{{A`{c}}}j}{l{{A`{c}}}j}{{hb}{{A`{c}}}j}{{hb}{{A`{c}}}Cb}{{{Cf{}{{Cd{c}}}}}cCb}{{Chc}Af{{Cj{h}}}}{{ce}{{n{c}}}j{{Cl{b}}}}{{ce}{{f{c}}}j{{Cl{b}}}}{{{n{c}}{n{c}}}{{A`{Ah}}}{jCn}}{{{f{c}}{f{c}}}{{A`{Ah}}}{}}{{ll}{{A`{Ah}}}}{{hh}{{A`{Ah}}}}{{{n{c}}{n{c}}}Bdj}{{{n{c}}}D`j}{{{n{c}}}lj}?????{cDb{}}{{DdCh}Af}{{{n{c}}Ch}Afj}{{{f{c}}Ch}Afj}{{hCh}Af}{{}{{A`{b}}}}{{}{{Df{AfAd}}}}{b{{Df{AfAd}}}}{c{{Df{e}}}{}{}}000000000{{lc}{{Df{{n{e}}l}}}{{Cl{b}}}j}1111111111{{be}{{Df{cAd}}}{}{{Bb{}{{An{c}}}}}}{cDh{}}000000000{AlB`}{{be}c{}{{Bb{}{{An{c}}}}}}{bAf}","D":"If","p":[[5,"CollectionGuard",0],[5,"LocalPool",0],[5,"Ref",0],[5,"AnyRef",0],[10,"Collectable",0],[5,"AnyRoot",0],[5,"Root",0],[6,"Option",224],[10,"CastFrom",225],[5,"WouldDeadlock",0],[1,"unit"],[6,"Ordering",226],[10,"Ord",226],[5,"Yielder",0],[17,"Output"],[5,"YieldComplete",0],[10,"FnOnce",227],[1,"bool"],[10,"PartialEq",226],[5,"Formatter",228],[8,"Result",228],[10,"Debug",228],[10,"Hash",229],[10,"Hasher",229],[10,"Sized",230],[17,"Target"],[10,"MapAs",0],[5,"Tracer",0],[10,"Into",231],[10,"AsRef",231],[10,"PartialOrd",226],[1,"u64"],[5,"String",232],[10,"Trace",0],[6,"Result",233],[5,"TypeId",234]],"r":[[8,235],[15,235]],"b":[[103,"impl-PartialEq%3C%26AnyRef%3E-for-Root%3CT%3E"],[104,"impl-PartialEq%3C%26Ref%3CT%3E%3E-for-Root%3CT%3E"],[105,"impl-PartialEq%3CRef%3CT%3E%3E-for-Root%3CT%3E"],[106,"impl-PartialEq-for-Root%3CT%3E"],[107,"impl-PartialEq%3CAnyRef%3E-for-Root%3CT%3E"],[108,"impl-PartialEq-for-Ref%3CT%3E"],[109,"impl-PartialEq%3CRoot%3CT%3E%3E-for-Ref%3CT%3E"],[110,"impl-PartialEq%3C%26AnyRef%3E-for-Ref%3CT%3E"],[111,"impl-PartialEq%3CAnyRef%3E-for-Ref%3CT%3E"],[112,"impl-PartialEq%3C%26Root%3CT%3E%3E-for-Ref%3CT%3E"],[118,"impl-Debug-for-WouldDeadlock"],[119,"impl-Display-for-WouldDeadlock"],[131,"impl-From%3C%26AnyRef%3E-for-AnyRef"],[132,"impl-From%3CRef%3CT%3E%3E-for-AnyRef"],[133,"impl-From%3C%26Ref%3CT%3E%3E-for-AnyRef"],[135,"impl-From%3C%26Root%3CT%3E%3E-for-AnyRef"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJUAEQAJAAAAEAAAABoAAwAfADUAVwADAFwAAQBjAAMAaAARAIIAAACEAAIAiAAOAKoAAwCxAAUAuAACAL4ACQDJAAkA1AAJAA=="}],\
["refuse_macros",{"t":"YY","n":["MapAs","Trace"],"q":[[0,"refuse_macros"]],"i":[0,0],"f":"``","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAEAAgA="}],\
["refuse_pool",{"t":"FFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["RefString","RootString","as_any","as_root","borrow","borrow","borrow_mut","borrow_mut","cast","cast","cast_into","cast_into","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","deref","downgrade","downgrade_any","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_any","from_cast","from_cast","hash","hash","into","into","load","new","new","partial_cmp","partial_cmp","root_count","to_owned","to_owned","to_string","trace","trace","try_from","try_from","try_from_any","try_into","try_into","type_id","type_id"],"q":[[0,"refuse_pool"],[72,"refuse"],[73,"core::option"],[74,"intentional::cast"],[75,"core::cmp"],[76,"alloc::string"],[77,"core::fmt"],[78,"core::hash"],[79,"alloc::borrow"],[80,"core::convert"],[81,"core::result"],[82,"core::any"]],"i":[0,0,1,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,4,4,4,4,4,4,4,4,4,1,1,4,4,1,1,4,4,1,4,4,4,4,1,1,1,1,1,4,1,4,1,4,1,1,4,1,4,1,4,4,1,4,4,1,4,1,4,4,1,4,1],"f":"``{bd}{{bf}{{j{h}}}}{ce{}{}}000{cg{}{}{{l{e}}}}011{hh}{bb}{{ce}n{}{}}0{{hh}A`}{{bb}A`}{{ce}A`{}{}}0{hc{}}{hb}{hd}{hn}{{hAb}Ad}{{hAf}Ad}{{hh}Ad}1{{hb}Ad}3{{bh}Ad}{{bb}Ad}{{ce}Ad{}{}}000{{hAh}Aj}0{{bAh}Aj}{cc{}}{Abh}{Afh}02{Afb}0{Abb}{d{{j{b}}}}55{{hc}nAl}{{bc}nAl}{ce{}{}}0{{bf}{{j{Ab}}}}{{ce}h{{B`{{An{Ab}}}}}{{Bb{f}}}}{cb{{B`{{An{Ab}}}}}}{{hh}{{j{A`}}}}{{bb}{{j{A`}}}}{hBd}66{cAf{}}{{hBf}n}{{bBf}n}{c{{Bh{e}}}{}{}}0{{Bjc}{{Bh{hBj}}}{{Bb{f}}}}11{cBl{}}0","D":"Bb","p":[[5,"RefString",0],[5,"AnyRef",72],[5,"CollectionGuard",72],[5,"RootString",0],[6,"Option",73],[10,"CastFrom",74],[1,"unit"],[6,"Ordering",75],[1,"str"],[1,"bool"],[5,"String",76],[5,"Formatter",77],[8,"Result",77],[10,"Hasher",78],[6,"Cow",79],[10,"Into",80],[10,"AsRef",80],[1,"u64"],[5,"Tracer",72],[6,"Result",81],[5,"AnyRoot",72],[5,"TypeId",82]],"r":[],"b":[[24,"impl-PartialEq%3Cstr%3E-for-RootString"],[25,"impl-PartialEq%3CString%3E-for-RootString"],[26,"impl-PartialEq-for-RootString"],[27,"impl-PartialEq%3C%26String%3E-for-RootString"],[28,"impl-PartialEq%3CRefString%3E-for-RootString"],[29,"impl-PartialEq%3C%26str%3E-for-RootString"],[30,"impl-PartialEq%3CRootString%3E-for-RefString"],[31,"impl-PartialEq-for-RefString"],[36,"impl-Display-for-RootString"],[37,"impl-Debug-for-RootString"],[40,"impl-From%3C%26str%3E-for-RootString"],[41,"impl-From%3C%26String%3E-for-RootString"],[42,"impl-From%3CString%3E-for-RootString"],[44,"impl-From%3CString%3E-for-RefString"],[45,"impl-From%3C%26String%3E-for-RefString"],[46,"impl-From%3C%26str%3E-for-RefString"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADcACAAFABAAGAAPACkAAgAtAAIAMQADADoAAQA9AAYARQADAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
